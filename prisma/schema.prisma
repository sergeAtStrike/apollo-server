// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id() @default(uuid())
  name              String
  age               Int
  email             String           @unique
  role              Role             @default(BASIC)
  userPreferences   UserPreferences? @relation(fields: [userPreferencesId], references: [id]) // 1-to-1 relationship
  userPreferencesId String?          @unique // 1-to-1 relationship
  writtenPosts      Post[]           @relation("WrittenPosts") // 1-to-many relationship for writtten posts
  favoritePosts     Post[]           @relation("FavoritePosts") // 1-to-many relationship for fav posts

  @@unique([age, name]) // block scoped directive: user must have a unique combination of name + age
  @@index([email]) // block scoped dir: indexable by email, so we can search by email in addition to search by id
}

model UserPreferences {
  id           String  @id() @default(uuid())
  emailUpdates Boolean
  user         User?
}

model Post {
  id            String     @id() @default(uuid())
  rating        Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [userId], references: [id]) // 1-to-many relationship for writtten posts
  userId        String // 1-to-many relationship for writtten posts
  favoritedBy   User       @relation("FavoritePosts", fields: [favoritedById], references: [id]) // 1-to-many relationship for fav posts
  favoritedById String // 1-to-many relationship for fav posts
  categories    Category[] // many-to-many relationship
}

model Category {
  id    String @id() @default(uuid())
  posts Post[] // many-to-many relationship
  name  String
}

enum Role {
  ADMIN
  BASIC
}
